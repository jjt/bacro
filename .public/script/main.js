(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require=="function"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);throw new Error("Cannot find module '"+o+"'")}var f=n[o]={exports:{}};t[o][0].call(f.exports,function(e){var n=t[o][1][e];return s(n?n:e)},f,f.exports,e,t,n,r)}return n[o].exports}var i=typeof require=="function"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(require,module,exports){
var Chat, Game, Lobby, R, clargs, csrfPost, cx, fbRoot, fbRootURL, router, show;

R = React.DOM;

cx = React.addons.classSet;

fbRootURL = 'https://bacrogame.firebaseio.com';

fbRoot = new Firebase(fbRootURL);

clargs = function() {
  return console.log(arguments);
};

csrfPost = function(url, body) {
  return $.ajax({
    type: 'POST',
    url: url,
    data: body,
    dataType: 'json',
    headers: {
      'X-CSRF-Token': csrftoken
    }
  });
};

ReactMultiplayerMixin.setFirebaseRoot(fbRoot);

Chat = React.createClass({
  setFbRef: function(props) {
    var fbRef;
    console.log('setFbref');
    fbRef = fbRoot.child("chats/" + props.gameId);
    fbRef.once('value', (function(_this) {
      return function(snapshot) {
        var chats;
        chats = _.values(snapshot.val());
        chats = _.sortBy(chats, 'id');
        return _this.setState({
          chats: chats
        });
      };
    })(this));
    return fbRef.on('child_added', (function(_this) {
      return function(snapshot) {
        var chats, msg;
        msg = snapshot.val();
        chats = _this.state.chats;
        chats.push(msg);
        return _this.setState({
          chats: chats
        });
      };
    })(this));
  },
  componentDidUpdate: function() {
    var $chats;
    console.log('cDU');
    $chats = this.refs.chats.getDOMNode();
    return $chats.scrollTop = $chats.scrollHeight;
  },
  componentWillMount: function() {
    console.log('cWM');
    return this.setFbRef(this.props);
  },
  componentWillRecieveProps: function(nextProps) {
    console.log('cWRP', nextProps);
    return this.setFbRef(nextProps);
  },
  getInitialState: function() {
    return {
      chats: []
    };
  },
  handleChatSubmit: function() {
    var $input;
    $input = this.refs.chatInput.getDOMNode();
    csrfPost("/game/" + this.props.gameId + "/chat", {
      msg: $input.value,
      channel: this.props.gameId
    });
    $input.value = '';
    return false;
  },
  render: function() {
    console.log(this.state.chats);
    return R.div({
      className: 'Chat'
    }, [
      R.div({
        className: 'Chat-chats',
        ref: 'chats'
      }, this.state.chats.map(function(el) {
        return R.div({}, [R.strong({}, el.user), ": " + el.msg]);
      })), R.form({
        className: 'form',
        onSubmit: this.handleChatSubmit
      }, [
        R.div({
          className: 'input-group'
        }, [
          R.input({
            className: 'Chat-input form-control',
            ref: 'chatInput',
            placeholder: 'Type to chat'
          }), R.span({
            className: 'input-group-btn'
          }, R.button({
            className: 'btn btn-primary'
          }, 'Chat'))
        ])
      ])
    ]);
  }
});

Lobby = React.createClass({
  render: function() {
    return R.div({
      className: 'Lobby'
    }, [
      R.h1({}, 'Lobby'), R.div({
        id: 'gameList',
        ref: 'gameList'
      }), R.div({
        id: 'userList',
        ref: 'userList'
      }), R.a({
        className: 'btn btn-primary',
        href: '#/newgame'
      }, 'New Game')
    ]);
  }
});

Game = React.createClass({
  componentWillMount: function() {
    var fb;
    fb = fbRoot.child("games/" + this.props.id);
    return fb.set({
      round: 1
    });
  },
  render: function() {
    return R.div({
      className: 'Game'
    }, [
      R.h1({}, "Game " + this.props.id), Chat({
        gameId: this.props.id
      })
    ]);
  }
});

show = function(component, props) {
  if (props == null) {
    props = {};
  }
  return React.renderComponent(component(props), document.getElementById('app'));
};

router = new Router({
  '/lobby': function() {
    return show(Lobby);
  },
  '/new': function() {
    return $.get('/game/new', (function(_this) {
      return function(resp) {
        return _this.setRoute("/" + resp);
      };
    })(this));
  },
  '/:id': function(id) {
    console.log('show game id ' + id);
    return show(Game, {
      id: id,
      key: id
    });
  }
});

router.init('/lobby');


},{}]},{},[1])
//# sourceMappingURL=data:application/json;base64,
